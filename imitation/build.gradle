plugins {
   id 'java'
   id 'org.xbib.gradle.plugin.git' version '2.0.0'
   id 'project-report'
   id 'org.hidetake.ssh' version '2.9.0'
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}
task clonePages() {
    doLast {
        mkdir 'build/gh-pages'
        def thisRepo = "/home/cs_arobe022/CS350/GitLab2"
        def pagesDir = "$buildDir/gh-pages"
            project.delete {
            delete pagesDir
        }

        def grgit = git.clone {
            dir = pagesDir
            uri ='file:' + thisRepo//'https://github.com/Arobe022/GitLab2.git'
            remote='git@github.com:Arobe022/GitLab2.git'
            bare = false
            refToCheckout = 'gh-pages'
        }
        System.out.println(dir);
        System.out.println(uri);
        System.out.println(remote);
        System.out.println(refToCheckout);
        grgit.checkout {
            branch = 'gh-pages'
        }

    }
}
task reports (dependsOn:['javadoc','test']){
	description 'Generate all reports for this project'
}
task copyReports (type: Copy, dependsOn: ['reports','clonePages']) {  
    from "$buildDir/reports"
    into "$buildDir/gh-pages"
     from "$buildDir/docs"
    into "$buildDir/gh-pages"
}

task deployReports (dependsOn:'copyReports') {
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        def grgit = git.open {
            dir = pagesDir + "/.git"
        }
        grgit.add (update: false, patterns: ['reports/'])
        grgit.add (update: true, patterns: ['reports/'])
                grgit.add (update: false, patterns: ['docs/'])
        grgit.add (update: true, patterns: ['docs/'])
        grgit.commit {
            message = "Updating web pages"
        }
        grgit.push {}
    }
}

